<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\SSE310_S.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\SSE310_S.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Thu Sep 26 15:14:44 2024
<BR><P>
<H3>Maximum Stack Usage =        112 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_lib_init_stdio_2 &rArr; _initio &rArr; freopen &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[8c]">Secure_printf</a>
 <LI><a href="#[8d]">test_llvm_nsc</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[14]">BRIDGE_ERROR_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">BRIDGE_ERROR_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[15]">COMBINED_PPU_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">COMBINED_PPU_Handler</a><BR>
 <LI><a href="#[18]">CPU0_CTI_0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">CPU0_CTI_0_Handler</a><BR>
 <LI><a href="#[19]">CPU0_CTI_1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">CPU0_CTI_1_Handler</a><BR>
 <LI><a href="#[34]">DMA_Ch_0_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34]">DMA_Ch_0_Combined_Handler</a><BR>
 <LI><a href="#[32]">DMA_Ch_0_Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">DMA_Ch_0_Error_Handler</a><BR>
 <LI><a href="#[33]">DMA_Ch_0_Terminal_Count_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">DMA_Ch_0_Terminal_Count_Handler</a><BR>
 <LI><a href="#[37]">DMA_Ch_1_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">DMA_Ch_1_Combined_Handler</a><BR>
 <LI><a href="#[35]">DMA_Ch_1_Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">DMA_Ch_1_Error_Handler</a><BR>
 <LI><a href="#[36]">DMA_Ch_1_Terminal_Count_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">DMA_Ch_1_Terminal_Count_Handler</a><BR>
 <LI><a href="#[3a]">DMA_Ch_2_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">DMA_Ch_2_Combined_Handler</a><BR>
 <LI><a href="#[38]">DMA_Ch_2_Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">DMA_Ch_2_Error_Handler</a><BR>
 <LI><a href="#[39]">DMA_Ch_2_Terminal_Count_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">DMA_Ch_2_Terminal_Count_Handler</a><BR>
 <LI><a href="#[3d]">DMA_Ch_3_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d]">DMA_Ch_3_Combined_Handler</a><BR>
 <LI><a href="#[3b]">DMA_Ch_3_Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b]">DMA_Ch_3_Error_Handler</a><BR>
 <LI><a href="#[3c]">DMA_Ch_3_Terminal_Count_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c]">DMA_Ch_3_Terminal_Count_Handler</a><BR>
 <LI><a href="#[8]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">DebugMon_Handler</a><BR>
 <LI><a href="#[2b]">ETHERNET_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">ETHERNET_Handler</a><BR>
 <LI><a href="#[42]">GPIO0_0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42]">GPIO0_0_Handler</a><BR>
 <LI><a href="#[4c]">GPIO0_10_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">GPIO0_10_Handler</a><BR>
 <LI><a href="#[4d]">GPIO0_11_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d]">GPIO0_11_Handler</a><BR>
 <LI><a href="#[4e]">GPIO0_12_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">GPIO0_12_Handler</a><BR>
 <LI><a href="#[4f]">GPIO0_13_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">GPIO0_13_Handler</a><BR>
 <LI><a href="#[50]">GPIO0_14_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">GPIO0_14_Handler</a><BR>
 <LI><a href="#[51]">GPIO0_15_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">GPIO0_15_Handler</a><BR>
 <LI><a href="#[43]">GPIO0_1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">GPIO0_1_Handler</a><BR>
 <LI><a href="#[44]">GPIO0_2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44]">GPIO0_2_Handler</a><BR>
 <LI><a href="#[45]">GPIO0_3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45]">GPIO0_3_Handler</a><BR>
 <LI><a href="#[46]">GPIO0_4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">GPIO0_4_Handler</a><BR>
 <LI><a href="#[47]">GPIO0_5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">GPIO0_5_Handler</a><BR>
 <LI><a href="#[48]">GPIO0_6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">GPIO0_6_Handler</a><BR>
 <LI><a href="#[49]">GPIO0_7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49]">GPIO0_7_Handler</a><BR>
 <LI><a href="#[4a]">GPIO0_8_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a]">GPIO0_8_Handler</a><BR>
 <LI><a href="#[4b]">GPIO0_9_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b]">GPIO0_9_Handler</a><BR>
 <LI><a href="#[3e]">GPIO0_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">GPIO0_Combined_Handler</a><BR>
 <LI><a href="#[52]">GPIO1_0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">GPIO1_0_Handler</a><BR>
 <LI><a href="#[5c]">GPIO1_10_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5c]">GPIO1_10_Handler</a><BR>
 <LI><a href="#[5d]">GPIO1_11_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5d]">GPIO1_11_Handler</a><BR>
 <LI><a href="#[5e]">GPIO1_12_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">GPIO1_12_Handler</a><BR>
 <LI><a href="#[5f]">GPIO1_13_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f]">GPIO1_13_Handler</a><BR>
 <LI><a href="#[60]">GPIO1_14_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[60]">GPIO1_14_Handler</a><BR>
 <LI><a href="#[61]">GPIO1_15_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61]">GPIO1_15_Handler</a><BR>
 <LI><a href="#[53]">GPIO1_1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53]">GPIO1_1_Handler</a><BR>
 <LI><a href="#[54]">GPIO1_2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[54]">GPIO1_2_Handler</a><BR>
 <LI><a href="#[55]">GPIO1_3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">GPIO1_3_Handler</a><BR>
 <LI><a href="#[56]">GPIO1_4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56]">GPIO1_4_Handler</a><BR>
 <LI><a href="#[57]">GPIO1_5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[57]">GPIO1_5_Handler</a><BR>
 <LI><a href="#[58]">GPIO1_6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[58]">GPIO1_6_Handler</a><BR>
 <LI><a href="#[59]">GPIO1_7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[59]">GPIO1_7_Handler</a><BR>
 <LI><a href="#[5a]">GPIO1_8_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5a]">GPIO1_8_Handler</a><BR>
 <LI><a href="#[5b]">GPIO1_9_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">GPIO1_9_Handler</a><BR>
 <LI><a href="#[3f]">GPIO1_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3f]">GPIO1_Combined_Handler</a><BR>
 <LI><a href="#[62]">GPIO2_0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[62]">GPIO2_0_Handler</a><BR>
 <LI><a href="#[6c]">GPIO2_10_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6c]">GPIO2_10_Handler</a><BR>
 <LI><a href="#[6d]">GPIO2_11_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">GPIO2_11_Handler</a><BR>
 <LI><a href="#[6e]">GPIO2_12_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6e]">GPIO2_12_Handler</a><BR>
 <LI><a href="#[6f]">GPIO2_13_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">GPIO2_13_Handler</a><BR>
 <LI><a href="#[70]">GPIO2_14_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">GPIO2_14_Handler</a><BR>
 <LI><a href="#[71]">GPIO2_15_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[71]">GPIO2_15_Handler</a><BR>
 <LI><a href="#[63]">GPIO2_1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[63]">GPIO2_1_Handler</a><BR>
 <LI><a href="#[64]">GPIO2_2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[64]">GPIO2_2_Handler</a><BR>
 <LI><a href="#[65]">GPIO2_3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[65]">GPIO2_3_Handler</a><BR>
 <LI><a href="#[66]">GPIO2_4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">GPIO2_4_Handler</a><BR>
 <LI><a href="#[67]">GPIO2_5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67]">GPIO2_5_Handler</a><BR>
 <LI><a href="#[68]">GPIO2_6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[68]">GPIO2_6_Handler</a><BR>
 <LI><a href="#[69]">GPIO2_7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69]">GPIO2_7_Handler</a><BR>
 <LI><a href="#[6a]">GPIO2_8_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a]">GPIO2_8_Handler</a><BR>
 <LI><a href="#[6b]">GPIO2_9_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6b]">GPIO2_9_Handler</a><BR>
 <LI><a href="#[40]">GPIO2_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[40]">GPIO2_Combined_Handler</a><BR>
 <LI><a href="#[72]">GPIO3_0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">GPIO3_0_Handler</a><BR>
 <LI><a href="#[73]">GPIO3_1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">GPIO3_1_Handler</a><BR>
 <LI><a href="#[74]">GPIO3_2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[74]">GPIO3_2_Handler</a><BR>
 <LI><a href="#[75]">GPIO3_3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[75]">GPIO3_3_Handler</a><BR>
 <LI><a href="#[41]">GPIO3_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">GPIO3_Combined_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[2c]">I2S_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">I2S_Handler</a><BR>
 <LI><a href="#[11]">MPC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">MPC_Handler</a><BR>
 <LI><a href="#[13]">MSC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">MSC_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[c]">NONSEC_WATCHDOG_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">NONSEC_WATCHDOG_Handler</a><BR>
 <LI><a href="#[b]">NONSEC_WATCHDOG_RESET_REQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">NONSEC_WATCHDOG_RESET_REQ_Handler</a><BR>
 <LI><a href="#[16]">NPU0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">NPU0_Handler</a><BR>
 <LI><a href="#[12]">PPC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">PPC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">SLOWCLK_Timer_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SLOWCLK_Timer_Handler</a><BR>
 <LI><a href="#[2f]">SPI_ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">SPI_ADC_Handler</a><BR>
 <LI><a href="#[30]">SPI_SHIELD0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">SPI_SHIELD0_Handler</a><BR>
 <LI><a href="#[31]">SPI_SHIELD1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">SPI_SHIELD1_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[6]">SecureFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SecureFault_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[1a]">System_Timestamp_Counter_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">System_Timestamp_Counter_Handler</a><BR>
 <LI><a href="#[e]">TFM_TIMER0_IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">TFM_TIMER0_IRQ_Handler</a><BR>
 <LI><a href="#[f]">TIMER1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">TIMER1_Handler</a><BR>
 <LI><a href="#[10]">TIMER2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">TIMER2_Handler</a><BR>
 <LI><a href="#[17]">TIMER3_AON_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">TIMER3_AON_Handler</a><BR>
 <LI><a href="#[2d]">TOUCH_SCREEN_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">TOUCH_SCREEN_Handler</a><BR>
 <LI><a href="#[25]">UART0_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">UART0_Combined_Handler</a><BR>
 <LI><a href="#[26]">UART1_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">UART1_Combined_Handler</a><BR>
 <LI><a href="#[27]">UART2_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">UART2_Combined_Handler</a><BR>
 <LI><a href="#[28]">UART3_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">UART3_Combined_Handler</a><BR>
 <LI><a href="#[29]">UART4_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">UART4_Combined_Handler</a><BR>
 <LI><a href="#[78]">UART5_Combined_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[78]">UART5_Combined_Handler</a><BR>
 <LI><a href="#[2a]">UARTOVF_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">UARTOVF_Handler</a><BR>
 <LI><a href="#[1d]">UARTRX1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">UARTRX1_Handler</a><BR>
 <LI><a href="#[1f]">UARTRX2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">UARTRX2_Handler</a><BR>
 <LI><a href="#[21]">UARTRX3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">UARTRX3_Handler</a><BR>
 <LI><a href="#[23]">UARTRX4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">UARTRX4_Handler</a><BR>
 <LI><a href="#[76]">UARTRX5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[76]">UARTRX5_Handler</a><BR>
 <LI><a href="#[1e]">UARTTX1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">UARTTX1_Handler</a><BR>
 <LI><a href="#[20]">UARTTX2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">UARTTX2_Handler</a><BR>
 <LI><a href="#[22]">UARTTX3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">UARTTX3_Handler</a><BR>
 <LI><a href="#[24]">UARTTX4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">UARTTX4_Handler</a><BR>
 <LI><a href="#[77]">UARTTX5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[77]">UARTTX5_Handler</a><BR>
 <LI><a href="#[2e]">USB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">USB_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7c]">ARM_USART_GetCapabilities</a> from driver_usart.o(.text.ARM_USART_GetCapabilities) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[7b]">ARM_USART_GetVersion</a> from driver_usart.o(.text.ARM_USART_GetVersion) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[14]">BRIDGE_ERROR_Handler</a> from startup_sse310mps3.o(.text.BRIDGE_ERROR_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_sse310mps3.o(.text.BusFault_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[15]">COMBINED_PPU_Handler</a> from startup_sse310mps3.o(.text.COMBINED_PPU_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[18]">CPU0_CTI_0_Handler</a> from startup_sse310mps3.o(.text.CPU0_CTI_0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[19]">CPU0_CTI_1_Handler</a> from startup_sse310mps3.o(.text.CPU0_CTI_1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[34]">DMA_Ch_0_Combined_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_0_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[32]">DMA_Ch_0_Error_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_0_Error_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[33]">DMA_Ch_0_Terminal_Count_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_0_Terminal_Count_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[37]">DMA_Ch_1_Combined_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_1_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[35]">DMA_Ch_1_Error_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_1_Error_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[36]">DMA_Ch_1_Terminal_Count_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_1_Terminal_Count_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[3a]">DMA_Ch_2_Combined_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_2_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[38]">DMA_Ch_2_Error_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_2_Error_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[39]">DMA_Ch_2_Terminal_Count_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_2_Terminal_Count_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[3d]">DMA_Ch_3_Combined_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_3_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[3b]">DMA_Ch_3_Error_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_3_Error_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[3c]">DMA_Ch_3_Terminal_Count_Handler</a> from startup_sse310mps3.o(.text.DMA_Ch_3_Terminal_Count_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from startup_sse310mps3.o(.text.DebugMon_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[85]">Driver_USART0_Control</a> from driver_usart.o(.text.Driver_USART0_Control) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[88]">Driver_USART0_GetModemStatus</a> from driver_usart.o(.text.Driver_USART0_GetModemStatus) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[84]">Driver_USART0_GetRxCount</a> from driver_usart.o(.text.Driver_USART0_GetRxCount) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[86]">Driver_USART0_GetStatus</a> from driver_usart.o(.text.Driver_USART0_GetStatus) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[83]">Driver_USART0_GetTxCount</a> from driver_usart.o(.text.Driver_USART0_GetTxCount) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[7d]">Driver_USART0_Initialize</a> from driver_usart.o(.text.Driver_USART0_Initialize) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[7f]">Driver_USART0_PowerControl</a> from driver_usart.o(.text.Driver_USART0_PowerControl) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[81]">Driver_USART0_Receive</a> from driver_usart.o(.text.Driver_USART0_Receive) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[80]">Driver_USART0_Send</a> from driver_usart.o(.text.Driver_USART0_Send) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[87]">Driver_USART0_SetModemControl</a> from driver_usart.o(.text.Driver_USART0_SetModemControl) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[82]">Driver_USART0_Transfer</a> from driver_usart.o(.text.Driver_USART0_Transfer) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[7e]">Driver_USART0_Uninitialize</a> from driver_usart.o(.text.Driver_USART0_Uninitialize) referenced from driver_usart.o(.rodata.Driver_USART0)
 <LI><a href="#[2b]">ETHERNET_Handler</a> from startup_sse310mps3.o(.text.ETHERNET_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[42]">GPIO0_0_Handler</a> from startup_sse310mps3.o(.text.GPIO0_0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[4c]">GPIO0_10_Handler</a> from startup_sse310mps3.o(.text.GPIO0_10_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[4d]">GPIO0_11_Handler</a> from startup_sse310mps3.o(.text.GPIO0_11_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[4e]">GPIO0_12_Handler</a> from startup_sse310mps3.o(.text.GPIO0_12_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[4f]">GPIO0_13_Handler</a> from startup_sse310mps3.o(.text.GPIO0_13_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[50]">GPIO0_14_Handler</a> from startup_sse310mps3.o(.text.GPIO0_14_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[51]">GPIO0_15_Handler</a> from startup_sse310mps3.o(.text.GPIO0_15_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[43]">GPIO0_1_Handler</a> from startup_sse310mps3.o(.text.GPIO0_1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[44]">GPIO0_2_Handler</a> from startup_sse310mps3.o(.text.GPIO0_2_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[45]">GPIO0_3_Handler</a> from startup_sse310mps3.o(.text.GPIO0_3_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[46]">GPIO0_4_Handler</a> from startup_sse310mps3.o(.text.GPIO0_4_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[47]">GPIO0_5_Handler</a> from startup_sse310mps3.o(.text.GPIO0_5_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[48]">GPIO0_6_Handler</a> from startup_sse310mps3.o(.text.GPIO0_6_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[49]">GPIO0_7_Handler</a> from startup_sse310mps3.o(.text.GPIO0_7_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[4a]">GPIO0_8_Handler</a> from startup_sse310mps3.o(.text.GPIO0_8_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[4b]">GPIO0_9_Handler</a> from startup_sse310mps3.o(.text.GPIO0_9_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[3e]">GPIO0_Combined_Handler</a> from startup_sse310mps3.o(.text.GPIO0_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[52]">GPIO1_0_Handler</a> from startup_sse310mps3.o(.text.GPIO1_0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[5c]">GPIO1_10_Handler</a> from startup_sse310mps3.o(.text.GPIO1_10_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[5d]">GPIO1_11_Handler</a> from startup_sse310mps3.o(.text.GPIO1_11_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[5e]">GPIO1_12_Handler</a> from startup_sse310mps3.o(.text.GPIO1_12_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[5f]">GPIO1_13_Handler</a> from startup_sse310mps3.o(.text.GPIO1_13_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[60]">GPIO1_14_Handler</a> from startup_sse310mps3.o(.text.GPIO1_14_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[61]">GPIO1_15_Handler</a> from startup_sse310mps3.o(.text.GPIO1_15_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[53]">GPIO1_1_Handler</a> from startup_sse310mps3.o(.text.GPIO1_1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[54]">GPIO1_2_Handler</a> from startup_sse310mps3.o(.text.GPIO1_2_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[55]">GPIO1_3_Handler</a> from startup_sse310mps3.o(.text.GPIO1_3_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[56]">GPIO1_4_Handler</a> from startup_sse310mps3.o(.text.GPIO1_4_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[57]">GPIO1_5_Handler</a> from startup_sse310mps3.o(.text.GPIO1_5_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[58]">GPIO1_6_Handler</a> from startup_sse310mps3.o(.text.GPIO1_6_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[59]">GPIO1_7_Handler</a> from startup_sse310mps3.o(.text.GPIO1_7_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[5a]">GPIO1_8_Handler</a> from startup_sse310mps3.o(.text.GPIO1_8_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[5b]">GPIO1_9_Handler</a> from startup_sse310mps3.o(.text.GPIO1_9_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[3f]">GPIO1_Combined_Handler</a> from startup_sse310mps3.o(.text.GPIO1_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[62]">GPIO2_0_Handler</a> from startup_sse310mps3.o(.text.GPIO2_0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[6c]">GPIO2_10_Handler</a> from startup_sse310mps3.o(.text.GPIO2_10_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[6d]">GPIO2_11_Handler</a> from startup_sse310mps3.o(.text.GPIO2_11_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[6e]">GPIO2_12_Handler</a> from startup_sse310mps3.o(.text.GPIO2_12_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[6f]">GPIO2_13_Handler</a> from startup_sse310mps3.o(.text.GPIO2_13_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[70]">GPIO2_14_Handler</a> from startup_sse310mps3.o(.text.GPIO2_14_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[71]">GPIO2_15_Handler</a> from startup_sse310mps3.o(.text.GPIO2_15_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[63]">GPIO2_1_Handler</a> from startup_sse310mps3.o(.text.GPIO2_1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[64]">GPIO2_2_Handler</a> from startup_sse310mps3.o(.text.GPIO2_2_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[65]">GPIO2_3_Handler</a> from startup_sse310mps3.o(.text.GPIO2_3_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[66]">GPIO2_4_Handler</a> from startup_sse310mps3.o(.text.GPIO2_4_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[67]">GPIO2_5_Handler</a> from startup_sse310mps3.o(.text.GPIO2_5_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[68]">GPIO2_6_Handler</a> from startup_sse310mps3.o(.text.GPIO2_6_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[69]">GPIO2_7_Handler</a> from startup_sse310mps3.o(.text.GPIO2_7_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[6a]">GPIO2_8_Handler</a> from startup_sse310mps3.o(.text.GPIO2_8_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[6b]">GPIO2_9_Handler</a> from startup_sse310mps3.o(.text.GPIO2_9_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[40]">GPIO2_Combined_Handler</a> from startup_sse310mps3.o(.text.GPIO2_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[72]">GPIO3_0_Handler</a> from startup_sse310mps3.o(.text.GPIO3_0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[73]">GPIO3_1_Handler</a> from startup_sse310mps3.o(.text.GPIO3_1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[74]">GPIO3_2_Handler</a> from startup_sse310mps3.o(.text.GPIO3_2_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[75]">GPIO3_3_Handler</a> from startup_sse310mps3.o(.text.GPIO3_3_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[41]">GPIO3_Combined_Handler</a> from startup_sse310mps3.o(.text.GPIO3_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_sse310mps3.o(.text.HardFault_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[2c]">I2S_Handler</a> from startup_sse310mps3.o(.text.I2S_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[11]">MPC_Handler</a> from startup_sse310mps3.o(.text.MPC_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[13]">MSC_Handler</a> from startup_sse310mps3.o(.text.MSC_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_sse310mps3.o(.text.MemManage_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_sse310mps3.o(.text.NMI_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[c]">NONSEC_WATCHDOG_Handler</a> from startup_sse310mps3.o(.text.NONSEC_WATCHDOG_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[b]">NONSEC_WATCHDOG_RESET_REQ_Handler</a> from startup_sse310mps3.o(.text.NONSEC_WATCHDOG_RESET_REQ_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[16]">NPU0_Handler</a> from startup_sse310mps3.o(.text.NPU0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[12]">PPC_Handler</a> from startup_sse310mps3.o(.text.PPC_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_sse310mps3.o(.text.PendSV_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_sse310mps3.o(.text.Reset_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[d]">SLOWCLK_Timer_Handler</a> from startup_sse310mps3.o(.text.SLOWCLK_Timer_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[2f]">SPI_ADC_Handler</a> from startup_sse310mps3.o(.text.SPI_ADC_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[30]">SPI_SHIELD0_Handler</a> from startup_sse310mps3.o(.text.SPI_SHIELD0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[31]">SPI_SHIELD1_Handler</a> from startup_sse310mps3.o(.text.SPI_SHIELD1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_sse310mps3.o(.text.SVC_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[6]">SecureFault_Handler</a> from startup_sse310mps3.o(.text.SecureFault_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_sse310mps3.o(.text.SysTick_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[1a]">System_Timestamp_Counter_Handler</a> from startup_sse310mps3.o(.text.System_Timestamp_Counter_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[e]">TFM_TIMER0_IRQ_Handler</a> from startup_sse310mps3.o(.text.TFM_TIMER0_IRQ_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[f]">TIMER1_Handler</a> from startup_sse310mps3.o(.text.TIMER1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[10]">TIMER2_Handler</a> from startup_sse310mps3.o(.text.TIMER2_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[17]">TIMER3_AON_Handler</a> from startup_sse310mps3.o(.text.TIMER3_AON_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[2d]">TOUCH_SCREEN_Handler</a> from startup_sse310mps3.o(.text.TOUCH_SCREEN_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[25]">UART0_Combined_Handler</a> from startup_sse310mps3.o(.text.UART0_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[26]">UART1_Combined_Handler</a> from startup_sse310mps3.o(.text.UART1_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[27]">UART2_Combined_Handler</a> from startup_sse310mps3.o(.text.UART2_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[28]">UART3_Combined_Handler</a> from startup_sse310mps3.o(.text.UART3_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[29]">UART4_Combined_Handler</a> from startup_sse310mps3.o(.text.UART4_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[78]">UART5_Combined_Handler</a> from startup_sse310mps3.o(.text.UART5_Combined_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[2a]">UARTOVF_Handler</a> from startup_sse310mps3.o(.text.UARTOVF_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[1b]">UARTRX0_Handler</a> from driver_usart.o(.text.UARTRX0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[1d]">UARTRX1_Handler</a> from startup_sse310mps3.o(.text.UARTRX1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[1f]">UARTRX2_Handler</a> from startup_sse310mps3.o(.text.UARTRX2_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[21]">UARTRX3_Handler</a> from startup_sse310mps3.o(.text.UARTRX3_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[23]">UARTRX4_Handler</a> from startup_sse310mps3.o(.text.UARTRX4_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[76]">UARTRX5_Handler</a> from startup_sse310mps3.o(.text.UARTRX5_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[1c]">UARTTX0_Handler</a> from driver_usart.o(.text.UARTTX0_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[1e]">UARTTX1_Handler</a> from startup_sse310mps3.o(.text.UARTTX1_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[20]">UARTTX2_Handler</a> from startup_sse310mps3.o(.text.UARTTX2_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[22]">UARTTX3_Handler</a> from startup_sse310mps3.o(.text.UARTTX3_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[24]">UARTTX4_Handler</a> from startup_sse310mps3.o(.text.UARTTX4_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[77]">UARTTX5_Handler</a> from startup_sse310mps3.o(.text.UARTTX5_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[2e]">USB_Handler</a> from startup_sse310mps3.o(.text.USB_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_sse310mps3.o(.text.UsageFault_Handler) referenced from startup_sse310mps3.o(RESET)
 <LI><a href="#[7a]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[79]">fputc</a> from fputc.o(i.fputc) referenced from _printf_char_file.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[89]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[90]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[e6]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[e7]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[91]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[e8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[aa]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[92]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[94]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[e9]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[9f]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[96]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[98]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit5.o(.ARM.Collect$$libinit$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[ea]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[eb]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[ec]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[ed]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[ee]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[ef]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[f0]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[f1]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[f2]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[f3]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[f4]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[f5]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[f6]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[f7]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000026))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_stdio_2 &rArr; _initio &rArr; freopen &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[f8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[fa]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[fb]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[fd]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[ff]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_stdio_2 &rArr; _terminateio &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
</UL>

<P><STRONG><a name="[100]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[101]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[102]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[103]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[104]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[105]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[8f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[106]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[107]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[9e]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[108]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[a0]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; stdout_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[109]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[c4]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a3]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[10a]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[a5]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[a7]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__acle_se_test_llvm_nsc
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__acle_se_Secure_printf
</UL>

<P><STRONG><a name="[a9]"></a>__printf</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, __printf.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[ad]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[93]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[10b]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv8m_maindsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[ab]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[ac]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[ae]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[95]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[a8]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[af]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[b0]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[9b]"></a>_initio</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, initio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _initio &rArr; freopen &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_stdio_2
</UL>

<P><STRONG><a name="[9d]"></a>_terminateio</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, initio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _terminateio &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_stdio_2
</UL>

<P><STRONG><a name="[b6]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[b8]"></a>__flsbuf</STRONG> (Thumb, 482 bytes, Stack size 40 bytes, flsbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[e5]"></a>__flsbuf_byte</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, flsbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __flsbuf_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[10c]"></a>__flsbuf_wide</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, flsbuf.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>setvbuf</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, setvbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setvbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[b2]"></a>freopen</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, fopen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = freopen &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[c1]"></a>fopen</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, fopen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[b5]"></a>_fclose_internal</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, fclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_close
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
</UL>

<P><STRONG><a name="[10d]"></a>fclose</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, fclose.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b3]"></a>__rt_SIGRTRED</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtred_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTRED &rArr; __rt_SIGRTRED_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED_inner
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[10e]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[111]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[114]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[c9]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[99]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[bd]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[c0]"></a>_fseek</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, fseek.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _fseek &rArr; _ftell_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
</UL>

<P><STRONG><a name="[115]"></a>fseek</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, fseek.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>_seterr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[be]"></a>_writebuf</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, stdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_seek
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>

<P><STRONG><a name="[c2]"></a>_fflush</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
</UL>

<P><STRONG><a name="[b9]"></a>_deferredlazyseek</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[c6]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[c5]"></a>__rt_SIGRTRED_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtred_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTRED_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
</UL>

<P><STRONG><a name="[a6]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[116]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[118]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[cc]"></a>_ftell_internal</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ftell.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ftell_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[11b]"></a>ftell</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ftell.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED_inner
</UL>

<P><STRONG><a name="[ca]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[d1]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
</UL>

<P><STRONG><a name="[11c]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[14]"></a>BRIDGE_ERROR_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.BRIDGE_ERROR_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BRIDGE_ERROR_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BRIDGE_ERROR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>COMBINED_PPU_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.COMBINED_PPU_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMBINED_PPU_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMBINED_PPU_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>CPU0_CTI_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.CPU0_CTI_0_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU0_CTI_0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU0_CTI_0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>CPU0_CTI_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.CPU0_CTI_1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU0_CTI_1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU0_CTI_1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA_Ch_0_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_0_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_0_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_0_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA_Ch_0_Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_0_Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_0_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_0_Error_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA_Ch_0_Terminal_Count_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_0_Terminal_Count_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_0_Terminal_Count_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_0_Terminal_Count_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA_Ch_1_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_1_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_1_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_1_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA_Ch_1_Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_1_Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_1_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_1_Error_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA_Ch_1_Terminal_Count_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_1_Terminal_Count_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_1_Terminal_Count_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_1_Terminal_Count_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA_Ch_2_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_2_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_2_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_2_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA_Ch_2_Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_2_Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_2_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_2_Error_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA_Ch_2_Terminal_Count_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_2_Terminal_Count_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_2_Terminal_Count_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_2_Terminal_Count_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA_Ch_3_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_3_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_3_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_3_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA_Ch_3_Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_3_Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_3_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_3_Error_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA_Ch_3_Terminal_Count_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DMA_Ch_3_Terminal_Count_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_3_Terminal_Count_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Ch_3_Terminal_Count_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.DebugMon_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ETHERNET_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.ETHERNET_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>GPIO0_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_0_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>GPIO0_10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_10_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_10_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>GPIO0_11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_11_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_11_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>GPIO0_12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_12_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_12_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_12_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>GPIO0_13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_13_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_13_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>GPIO0_14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_14_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_14_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_14_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>GPIO0_15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_15_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_15_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>GPIO0_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>GPIO0_2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_2_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>GPIO0_3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_3_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>GPIO0_4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_4_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>GPIO0_5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_5_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>GPIO0_6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_6_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>GPIO0_7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_7_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>GPIO0_8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_8_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_8_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_8_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>GPIO0_9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_9_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_9_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_9_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>GPIO0_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO0_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>GPIO1_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_0_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>GPIO1_10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_10_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_10_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPIO1_11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_11_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_11_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>GPIO1_12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_12_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_12_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_12_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPIO1_13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_13_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_13_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>GPIO1_14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_14_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_14_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_14_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>GPIO1_15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_15_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_15_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>GPIO1_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>GPIO1_2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_2_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>GPIO1_3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_3_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>GPIO1_4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_4_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>GPIO1_5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_5_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>GPIO1_6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_6_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>GPIO1_7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_7_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>GPIO1_8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_8_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_8_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_8_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>GPIO1_9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_9_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_9_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_9_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>GPIO1_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO1_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>GPIO2_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_0_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>GPIO2_10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_10_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_10_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>GPIO2_11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_11_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_11_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>GPIO2_12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_12_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_12_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_12_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>GPIO2_13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_13_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_13_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>GPIO2_14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_14_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_14_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_14_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>GPIO2_15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_15_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_15_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>GPIO2_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>GPIO2_2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_2_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>GPIO2_3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_3_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>GPIO2_4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_4_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>GPIO2_5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_5_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>GPIO2_6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_6_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>GPIO2_7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_7_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>GPIO2_8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_8_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_8_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_8_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>GPIO2_9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_9_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_9_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_9_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>GPIO2_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO2_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>GPIO3_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO3_0_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>GPIO3_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO3_1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>GPIO3_2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO3_2_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>GPIO3_3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO3_3_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>GPIO3_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.GPIO3_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2S_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.I2S_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>MPC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.MPC_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>MSC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.MSC_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>NONSEC_WATCHDOG_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.NONSEC_WATCHDOG_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NONSEC_WATCHDOG_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NONSEC_WATCHDOG_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>NONSEC_WATCHDOG_RESET_REQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.NONSEC_WATCHDOG_RESET_REQ_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NONSEC_WATCHDOG_RESET_REQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NONSEC_WATCHDOG_RESET_REQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>NPU0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.NPU0_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NPU0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NPU0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PPC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.PPC_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PPC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.PendSV_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.Reset_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Reset_Handler &rArr; SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SLOWCLK_Timer_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.SLOWCLK_Timer_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLOWCLK_Timer_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLOWCLK_Timer_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI_ADC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.SPI_ADC_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI_SHIELD0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.SPI_SHIELD0_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SHIELD0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SHIELD0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI_SHIELD1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.SPI_SHIELD1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SHIELD1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SHIELD1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.SVC_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SecureFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.SecureFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>__acle_se_Secure_printf</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, main.o(.text.Secure_printf), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __acle_se_Secure_printf &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Secure_printf
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[e1]"></a>SystemInit</STRONG> (Thumb, 398 bytes, Stack size 16 bytes, system_sse310mps3.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[1a]"></a>System_Timestamp_Counter_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.System_Timestamp_Counter_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Timestamp_Counter_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Timestamp_Counter_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TFM_TIMER0_IRQ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.TFM_TIMER0_IRQ_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFM_TIMER0_IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFM_TIMER0_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.TIMER1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.TIMER2_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER3_AON_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.TIMER3_AON_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_AON_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_AON_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TOUCH_SCREEN_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.TOUCH_SCREEN_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TOUCH_SCREEN_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TOUCH_SCREEN_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>UART0_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UART0_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>UART1_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UART1_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>UART2_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UART2_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>UART3_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UART3_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>UART4_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UART4_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>UART5_Combined_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UART5_Combined_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_Combined_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_Combined_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>UARTOVF_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTOVF_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOVF_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOVF_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>UARTRX0_Handler</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, driver_usart.o(.text.UARTRX0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTRX0_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_read
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_clear_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UARTRX1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTRX1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UARTRX2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTRX2_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UARTRX3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTRX3_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>UARTRX4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTRX4_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>UARTRX5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTRX5_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>UARTTX0_Handler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, driver_usart.o(.text.UARTTX0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTTX0_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_write
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_clear_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>UARTTX1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTTX1_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UARTTX2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTTX2_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UARTTX3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTTX3_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>UARTTX4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTTX4_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>UARTTX5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UARTTX5_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.USB_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sse310mps3.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sse310mps3.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>_sys_close</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, retarget_io.o(.text._sys_close))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
</UL>

<P><STRONG><a name="[bb]"></a>_sys_flen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget_io.o(.text._sys_flen))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[bc]"></a>_sys_istty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, retarget_io.o(.text._sys_istty))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[bf]"></a>_sys_open</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, retarget_io.o(.text._sys_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _sys_open &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
</UL>

<P><STRONG><a name="[cd]"></a>_sys_seek</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget_io.o(.text._sys_seek))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[ce]"></a>_sys_write</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, retarget_io.o(.text._sys_write))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[a1]"></a>main</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = main &rArr; stdout_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stdout_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e4]"></a>stdout_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stdout_usart.o(.text.stdout_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = stdout_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>__acle_se_test_llvm_nsc</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, main.o(.text.test_llvm_nsc), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __acle_se_test_llvm_nsc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_llvm_nsc
</UL>

<P><STRONG><a name="[e2]"></a>uart_cmsdk_clear_interrupt</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_clear_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX0_Handler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX0_Handler
</UL>

<P><STRONG><a name="[d8]"></a>uart_cmsdk_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_cmsdk_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_USARTx_PowerControl
</UL>

<P><STRONG><a name="[d4]"></a>uart_cmsdk_irq_rx_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_irq_rx_disable))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_USARTx_PowerControl
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Uninitialize
</UL>

<P><STRONG><a name="[d9]"></a>uart_cmsdk_irq_rx_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_irq_rx_enable))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_USARTx_PowerControl
</UL>

<P><STRONG><a name="[d5]"></a>uart_cmsdk_irq_tx_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_irq_tx_disable))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_USARTx_PowerControl
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Uninitialize
</UL>

<P><STRONG><a name="[da]"></a>uart_cmsdk_irq_tx_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_irq_tx_enable))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_USARTx_PowerControl
</UL>

<P><STRONG><a name="[df]"></a>uart_cmsdk_read</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_read))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX0_Handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Receive
</UL>

<P><STRONG><a name="[d6]"></a>uart_cmsdk_rx_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_rx_disable))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Control
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_USARTx_PowerControl
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Uninitialize
</UL>

<P><STRONG><a name="[dc]"></a>uart_cmsdk_rx_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_rx_enable))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Control
</UL>

<P><STRONG><a name="[de]"></a>uart_cmsdk_rx_ready</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_rx_ready))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Receive
</UL>

<P><STRONG><a name="[db]"></a>uart_cmsdk_set_baudrate</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_set_baudrate))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Control
</UL>

<P><STRONG><a name="[d7]"></a>uart_cmsdk_tx_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_tx_disable))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Control
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_USARTx_PowerControl
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Uninitialize
</UL>

<P><STRONG><a name="[dd]"></a>uart_cmsdk_tx_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_tx_enable))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Control
</UL>

<P><STRONG><a name="[e0]"></a>uart_cmsdk_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart_cmsdk_drv.o(.text.uart_cmsdk_write))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX0_Handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_Send
</UL>

<P><STRONG><a name="[79]"></a>fputc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fputc &rArr; __flsbuf_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>_fp_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, fpinit_81m.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[11e]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit_81m.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[11f]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit_81m.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[8c]"></a>Secure_printf</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, anon$$obj.o(Veneer$$CMSE), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = Secure_printf &rArr; __acle_se_Secure_printf &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__acle_se_Secure_printf
</UL>

<P><STRONG><a name="[8d]"></a>test_llvm_nsc</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, anon$$obj.o(Veneer$$CMSE), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = test_llvm_nsc &rArr; __acle_se_test_llvm_nsc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__acle_se_test_llvm_nsc
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7b]"></a>ARM_USART_GetVersion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_usart.o(.text.ARM_USART_GetVersion))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[7c]"></a>ARM_USART_GetCapabilities</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, driver_usart.o(.text.ARM_USART_GetCapabilities))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[7d]"></a>Driver_USART0_Initialize</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, driver_usart.o(.text.Driver_USART0_Initialize))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[7e]"></a>Driver_USART0_Uninitialize</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, driver_usart.o(.text.Driver_USART0_Uninitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Driver_USART0_Uninitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_tx_disable
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_rx_disable
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_irq_tx_disable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_irq_rx_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[7f]"></a>Driver_USART0_PowerControl</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, driver_usart.o(.text.Driver_USART0_PowerControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Driver_USART0_PowerControl &rArr; ARM_USARTx_PowerControl &rArr; uart_cmsdk_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ARM_USARTx_PowerControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[d3]"></a>ARM_USARTx_PowerControl</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, driver_usart.o(.text.ARM_USARTx_PowerControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ARM_USARTx_PowerControl &rArr; uart_cmsdk_init
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_irq_tx_enable
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_irq_rx_enable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_tx_disable
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_rx_disable
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_irq_tx_disable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_irq_rx_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_USART0_PowerControl
</UL>

<P><STRONG><a name="[80]"></a>Driver_USART0_Send</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, driver_usart.o(.text.Driver_USART0_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Driver_USART0_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[81]"></a>Driver_USART0_Receive</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, driver_usart.o(.text.Driver_USART0_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Driver_USART0_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_rx_ready
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[82]"></a>Driver_USART0_Transfer</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, driver_usart.o(.text.Driver_USART0_Transfer))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[83]"></a>Driver_USART0_GetTxCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_usart.o(.text.Driver_USART0_GetTxCount))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[84]"></a>Driver_USART0_GetRxCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, driver_usart.o(.text.Driver_USART0_GetRxCount))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[85]"></a>Driver_USART0_Control</STRONG> (Thumb, 306 bytes, Stack size 8 bytes, driver_usart.o(.text.Driver_USART0_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Driver_USART0_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_tx_enable
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_rx_enable
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_set_baudrate
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_tx_disable
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cmsdk_rx_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[86]"></a>Driver_USART0_GetStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_usart.o(.text.Driver_USART0_GetStatus))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[87]"></a>Driver_USART0_SetModemControl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, driver_usart.o(.text.Driver_USART0_SetModemControl))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[88]"></a>Driver_USART0_GetModemStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, driver_usart.o(.text.Driver_USART0_GetModemStatus))
<BR>[Address Reference Count : 1]<UL><LI> driver_usart.o(.rodata.Driver_USART0)
</UL>
<P><STRONG><a name="[7a]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
